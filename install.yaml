# code: language=ansible
---
- name: Download and setup minikube
  hosts: localhost
  gather_facts: false
  vars_files: vars.yaml
  vars_prompt:
    - name: sudo_pass
      prompt: "Provide your sudo password to start the installation"

  tasks:
    - name: Download minikube {{ minikube_version }}
      become: true
      ansible.builtin.get_url:
        url: "https://github.com/kubernetes/minikube/releases/download/{{ minikube_version }}/minikube-linux-amd64"
        dest: /usr/local/bin/minikube
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: root

    - name: Get minikube version
      ansible.builtin.command: minikube version
      register: minikube_cli

    - name: Verify that specified version == installed version
      ansible.builtin.assert:
        that: minikube_version in minikube_cli.stdout
        fail_msg: "Something went wrong. Use the deinstall.yaml playbook to cleanup and re-run this playbook for a fresh install."
        success_msg: "minikube {{ minikube_version }} was installed successfully."

    - name: Ensure docker is installed
      when: minikube_install_docker
      become: true
      ansible.builtin.apt:
        name: docker-ce

    - name: Ensure docker is started
      become: true
      ansible.builtin.systemd:
        name: docker.service
        state: started
      register: docker_state
      until: docker_state.status.ActiveState == "active"

    - name: Get minikube status
      ansible.builtin.command: minikube status
      ignore_errors: true
      register: minikube_status

    - name: Start minikube
      when: '"host: Running" not in minikube_status.stdout'
      ansible.builtin.command: minikube start

    - name: Setup minikube kubectl
      ansible.builtin.command: minikube kubectl get pods

    - name: Ensure bash-completion is installed
      become: true
      ansible.builtin.apt:
        name: bash-completion

    - name: Get minikube bash completion output
      ansible.builtin.command: minikube completion bash
      register: minikube_bash_completion

    - name: Create minikube bash completion file
      become: true
      ansible.builtin.blockinfile:
        path: /usr/local/etc/bash_completion.d/minikube-completion
        create: true
        owner: "{{ ansible_user }}"
        group: root
        mode: "0755"
        marker: "{{ ansible_blockinfile_marker }}"
        block: "{{ minikube_bash_completion.stdout }}"

    - name: Create alias for "minikube kubectl"
      become: true
      ansible.builtin.blockinfile:
        path: /etc/profile.d/minikube.sh
        create: true
        owner: "{{ ansible_user }}"
        group: root
        mode: "0755"
        marker: "{{ ansible_blockinfile_marker }}"
        block: "alias minik='minikube kubectl --'"

    - name: "Enable minikube addon(s): {{ minikube_addons | join(', ') }}"
      loop: "{{ minikube_addons }}"
      ansible.builtin.command: "minikube addons enable {{ item }}"

    - name: Setup local DNS resolution for minikube cluster
      tags: dns
      block:
        - name: Get minikube ip
          ansible.builtin.command: minikube ip
          register: minikube_ip

        - name: Enable minikube ingress + ingress-dns addons
          loop:
            - ingress
            - ingress-dns
          ansible.builtin.command: "minikube addons enable {{ item }}"

        - name: Configure Network Manager
          become: true
          ansible.builtin.blockinfile:
            path: /etc/NetworkManager/NetworkManager.conf
            marker: "{{ ansible_blockinfile_marker }}"
            insertbefore: "^plugins=.*"
            block: dns=dnsmasq

        - name: Configure dnsmasq
          become: true
          ansible.builtin.blockinfile:
            path: /etc/NetworkManager/dnsmasq.d/minikube.conf
            create: true
            owner: "{{ ansible_user }}"
            group: root
            mode: "0644"
            marker: "{{ ansible_blockinfile_marker }}"
            block: "server=/test/{{ minikube_ip.stdout }}"

        - name: Restart Network Manager
          become: true
          ansible.builtin.systemd:
            name: NetworkManager.service
            state: restarted
            daemon_reload: true

    - name: Add minikube to autostart
      when: minikube_autostart
      tags: autostart
      block:
        - name: Add docker.service to autostart, because minikube depends on it
          become: true
          ansible.builtin.systemd:
            name: docker.service
            enabled: true

        - name: Create systemd conf for minikube.service
          become: true
          ansible.builtin.blockinfile:
            path: /etc/systemd/system/minikube.service
            create: true
            owner: "{{ ansible_user }}"
            group: root
            mode: "0755"
            marker: "{{ ansible_blockinfile_marker }}"
            block: |
              [Unit]
              Description=Start minikube
              After=docker.service

              [Service]
              Type=oneshot
              ExecStart=/usr/local/bin/minikube start
              ExecStop=/usr/local/bin/minikube stop
              RemainAfterExit=true
              StandardOutput=journal
              User={{ ansible_user }}
              Group={{ ansible_user }}

              [Install]
              WantedBy=multi-user.target

        - name: Add minikube.service to autostart
          become: true
          ansible.builtin.systemd:
            name: minikube.service
            enabled: true
            daemon_reload: true
